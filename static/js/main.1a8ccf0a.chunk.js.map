{"version":3,"sources":["redux/types.jsx","redux/actions.jsx","components/СontactForm/СontactForm.styled.jsx","components/СontactForm/СontactForm.jsx","components/СontactElement/ContactElement.styled.jsx","components/СontactElement/СontactElement.jsx","components/СontactList/СontactList.styled.jsx","components/СontactList/СontactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App.styled.jsx","components/App.jsx","redux/reducer.jsx","redux/store.jsx","index.js"],"names":["name","number","type","types","payload","id","uuidv4","contactId","value","Form","styled","form","Input","input","Button","button","ContactForm","state","handleContact","e","console","log","currentTarget","setState","handleSubmitContact","preventDefault","props","onSubmit","reset","this","htmlFor","onChange","pattern","title","required","Component","connect","dispatch","contactsActions","Item","li","ContactElement","onClick","List","ul","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","contact","includes","contacts","items","onDeleteContact","map","Label","label","target","PhonebookTitle","h1","ContactTitle","h2","App","combineReducers","rootReducer","contactsReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySACe,EACG,gBADH,EAEG,gBAFH,EAGE,eCwBF,EAzBO,SAACA,EAAMC,GAAP,MAAmB,CACvCC,KAAMC,EACNC,QAAS,CACPC,GAAIC,cACJN,OACAC,YAoBW,EAXO,SAAAM,GAAS,MAAK,CAClCL,KAAMC,EACNC,QAASG,IASI,EANM,SAAAC,GAAK,MAAK,CAC7BN,KAAMC,EACNC,QAASI,I,cCtBEC,EAAOC,IAAOC,KAAV,wEAKJC,EAAQF,IAAOG,MAAV,4FAMLC,EAASJ,IAAOK,OAAV,2G,OCRbC,E,4MACJC,MAAQ,CACNjB,KAAM,GACNC,OAAQ,I,EAGViB,cAAgB,SAAAC,GACdC,QAAQC,IAAIF,EAAEG,eACdF,QAAQC,IAAIF,EAAEG,cAActB,MAC5BoB,QAAQC,IAAIF,EAAEG,cAAcd,OAE5B,MAAwBW,EAAEG,cAAlBtB,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,MACd,EAAKe,SAAL,eAAiBvB,EAAOQ,K,EAG1BgB,oBAAsB,SAAAL,GACpBA,EAAEM,iBAEF,EAAKC,MAAMC,SAAS,EAAKV,OACzB,EAAKW,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAAEvB,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,MAAyB4B,KAAKZ,MAAtBjB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAEd,OACE,eAACQ,EAAD,CAAMkB,SAAUE,KAAKL,oBAArB,UACE,wBAAOM,QAAQ,OAAf,iBAEE,cAAClB,EAAD,CACEJ,MAAOR,EACP+B,SAAUF,KAAKX,cACfhB,KAAK,OACLF,KAAK,OACLgC,QAAQ,yHACRC,MAAM,kcAENC,UAAQ,OAGZ,wBAAOJ,QAAQ,SAAf,mBAEE,cAAClB,EAAD,CACEJ,MAAOP,EACP8B,SAAUF,KAAKX,cACfhB,KAAK,MACLF,KAAK,SACLgC,QAAQ,yFACRC,MAAM,giBAENC,UAAQ,OAGZ,8BACE,cAACpB,EAAD,CAAQZ,KAAK,SAAb,kC,GA1DgBiC,aAqEXC,cAAQ,MAJI,SAAAC,GAAQ,MAAK,CACtCV,SAAU,SAAC3B,EAAMC,GAAP,OAAkBoC,EAASC,EAA8BtC,EAAMC,QAG5DmC,CAAkCpB,GCxEpCuB,EAAO7B,IAAO8B,GAAV,kHAOJ1B,EAASJ,IAAOK,OAAV,2GCcJ0B,EApBQ,SAAC,GAAmC,IAAjCpC,EAAgC,EAAhCA,GAAIL,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,OAAQyC,EAAc,EAAdA,QAC1C,OACE,eAACH,EAAD,WACE,iCACGvC,EADH,KACWC,KAEX,cAAC,EAAD,CAAQC,KAAK,SAASwC,QAASA,EAA/B,sBAJSrC,ICHFsC,EAAOjC,IAAOkC,GAAV,mDC6BXC,EAAqB,SAACC,EAAaC,GACvC,IAAMC,EAAmBD,EAAOE,cAEhC,OAAOH,EAAYC,QAAO,SAAAG,GAAO,OAAIA,EAAQlD,KAAKiD,cAAcE,SAASH,OAW5DZ,eARS,SAAC,GAAD,QAAGgB,SAAYL,EAAf,EAAeA,OAAQM,EAAvB,EAAuBA,MAAvB,MAAsC,CAC5DD,SAAUP,EAAmBE,EAAQM,OAGZ,SAAAhB,GAAQ,MAAK,CACtCiB,gBAAiB,SAAAjD,GAAE,OAAIgC,EAASC,EAA8BjC,QAGjD+B,EAvCK,SAAC,GAAmC,IAAjCgB,EAAgC,EAAhCA,SAAUE,EAAsB,EAAtBA,gBAC/B,OACE,cAACX,EAAD,UACGS,EAASG,KAAI,SAAAL,GAAO,OACnB,cAAC,EAAD,CACElD,KAAMkD,EAAQlD,KACdC,OAAQiD,EAAQjD,OAChByC,QAAS,kBAAMY,EAAgBJ,EAAQ7C,eCXpCmD,EAAQ9C,IAAO+C,MAAV,qECyBHrB,eARS,SAAAnB,GAAK,MAAK,CAChCT,MAAOS,EAAMmC,SAASL,WAGG,SAAAV,GAAQ,MAAK,CACtCN,SAAU,SAAAZ,GAAC,OAAIkB,EAASC,EAA6BnB,EAAEuC,OAAOlD,YAGjD4B,EAtBA,SAAC,GAAyB,IAAvB5B,EAAsB,EAAtBA,MAAOuB,EAAe,EAAfA,SACvB,OACE,eAACyB,EAAD,WACE,sDACA,uBAAOtD,KAAK,OAAOM,MAAOA,EAAOuB,SAAUA,UCPpC4B,EAAiBjD,IAAOkD,GAAV,kDAIdC,EAAenD,IAAOoD,GAAV,kDCCZC,EAAb,4JAwDE,WAKE,OACE,gCACE,cAACJ,EAAD,wBACA,cAAC,EAAD,IACA,cAACE,EAAD,uBACA,cAAC,EAAD,IACA,cAAC,EAAD,WAnER,GAAyB1B,a,wBC0BV6B,4BAAgB,CAC7BX,MAxBY,WAAoC,IAAnCpC,EAAkC,uDAA1B,GAA0B,yCAApBf,EAAoB,EAApBA,KAAME,EAAc,EAAdA,QACjC,OAAQF,GACN,KAAKC,EACH,MAAM,GAAN,mBAAWc,GAAX,CAAkBb,IAEpB,KAAKD,EACH,OAAOc,EAAM8B,QAAO,qBAAG1C,KAAgBD,KAEzC,QACE,OAAOa,IAgBX8B,OAZa,WAAoC,IAAnC9B,EAAkC,uDAA1B,GAA0B,yCAApBf,EAAoB,EAApBA,KAAME,EAAc,EAAdA,QAClC,OAAQF,IACDC,EACIC,EAGAa,KCzBPgD,EAAcD,0BAAgB,CAClCZ,SAAUc,IAKGC,GAFDC,sBAAYH,EAAaI,iCCAvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,EAAD,UAINM,SAASC,eAAe,W","file":"static/js/main.1a8ccf0a.chunk.js","sourcesContent":["// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  CREATE_CONTACT: 'createContact',\n  DELETE_CONTACT: 'deleteContact',\n  CHANGE_FILTER: 'changeFilter',\n};\n","import { v4 as uuidv4 } from 'uuid';\nimport types from './types';\n\nconst createContact = (name, number) => ({\n  type: types.CREATE_CONTACT,\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n\n  //  contacts.some(contact => contact.name === newContact.name)\n  //   ? alert(`${newContact.name} is already in contacts`)\n  //   : setContacts( prevState => [newContact, ...prevState],\n  //   )\n});\n\nconst deleteContact = contactId => ({\n  type: types.DELETE_CONTACT,\n  payload: contactId,\n});\n\nconst changeFilter = value => ({\n  type: types.CHANGE_FILTER,\n  payload: value,\n});\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { createContact, deleteContact, changeFilter };\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  // display: block;\n  margin-left: 20px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  background-color: #34b4eb;\n  border-color: #34b4eb;\n  border-radius: 4px;\n`;\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/actions';\nimport { Form, Input, Button } from './СontactForm.styled';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleContact = e => {\n    console.log(e.currentTarget);\n    console.log(e.currentTarget.name);\n    console.log(e.currentTarget.value);\n\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmitContact = e => {\n    e.preventDefault();\n    //   console.log(this.state);\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <Form onSubmit={this.handleSubmitContact}>\n        <label htmlFor=\"name\">\n          Name\n          <Input\n            value={name}\n            onChange={this.handleContact}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов.\n             Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label htmlFor=\"number\">\n          Number\n          <Input\n            value={number}\n            onChange={this.handleContact}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы,\n             тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <div>\n          <Button type=\"submit\">Add contact</Button>\n        </div>\n      </Form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(contactsActions.createContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  width: 300px;\n  margin: 4px;\n`;\n\nexport const Button = styled.button`\n  background-color: #34b4eb;\n  border-color: #34b4eb;\n  border-radius: 4px;\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Button } from './ContactElement.styled';\n\nconst ContactElement = ({ id, name, number, onClick }) => {\n  return (\n    <Item key={id}>\n      <span>\n        {name}: {number}\n      </span>\n      <Button type=\"button\" onClick={onClick}>\n        Delete\n      </Button>\n    </Item>\n  );\n};\n\nContactElement.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ContactElement;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding-left: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport ContactElement from 'components/СontactElement/СontactElement';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/actions';\nimport { List } from './СontactList.styled';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <List>\n      {contacts.map(contact => (\n        <ContactElement\n          name={contact.name}\n          number={contact.number}\n          onClick={() => onDeleteContact(contact.id)}\n        />\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n};\n\nconst mapStateToProps = ({ contacts: { filter, items } }) => ({\n  contacts: getVisibleContacts(filter, items),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: block;\n  margin-left: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/actions';\nimport { Label } from './Filter.styled';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <Label>\n      <p> Find contact by name</p>\n      <input type=\"text\" value={value} onChange={onChange} />\n    </Label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import styled from '@emotion/styled';\n\nexport const PhonebookTitle = styled.h1`\n  margin-left: 20px;\n`;\n\nexport const ContactTitle = styled.h2`\n  margin-left: 20px;\n`;\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './СontactForm/СontactForm';\nimport ContactList from './СontactList/СontactList';\nimport Filter from './Filter/Filter';\nimport { PhonebookTitle, ContactTitle } from './App.styled';\n\nexport class App extends Component {\n  // state = {\n  //   contacts: [\n  //     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  //     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  //     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  //     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  //   ],\n  // filter: '',\n  // };\n\n  // componentDidMount() {\n  //   const json = localStorage.getItem('contacts');\n  //   const contacts = JSON.parse(json);\n  //   if (contacts) {\n  //     this.setState(() => ({ contacts }));\n  //   }\n  // }\n  // componentDidUpdate() {\n  //   const json = JSON.stringify(this.state.contacts);\n  //   localStorage.setItem('contacts', json);\n  // }\n\n  // formSubmitHandler = ({ name, number }) => {\n  //   const { contacts } = this.state;\n  //   const newContact = {\n  //     id: uuidv4(),\n  //     name,\n  //     number,\n  //   };\n\n  //   contacts.some(contact => contact.name === newContact.name)\n  //     ? alert(`${newContact.name} is already in contacts`)\n  //     : this.setState(({ contacts }) => ({\n  //         contacts: [newContact, ...contacts],\n  //       }));\n  // };\n\n  // changeFilter = e => {\n  //   this.setState({ filter: e.currentTarget.value });\n  //   console.log(e.currentTarget.value);\n  // };\n\n  // getVisibleContacts = () => {\n  //   const { contacts, filter } = this.state;\n  //   const normalizedFilter = filter.toLowerCase();\n\n  //   return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  // };\n\n  // deleteContact = contactId => {\n  //   this.setState(prevState => ({\n  //     contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n  //   }));\n  // };\n\n  render() {\n    // const { filter } = this.state;\n\n    // const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <PhonebookTitle>Phonebook</PhonebookTitle>\n        <ContactForm />\n        <ContactTitle>Contacts</ContactTitle>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}\n","import { combineReducers } from 'redux';\nimport types from './types';\n\n// const phonebookInitialState = {\n//     contacts: {\n//     items: [],\n//     filter: ''\n//   }\n// }\n\nconst items = (state = [], { type, payload }) => {\n  switch (type) {\n    case types.CREATE_CONTACT:\n      return [...state, payload];\n\n    case types.DELETE_CONTACT:\n      return state.filter(({ id }) => id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = '', { type, payload }) => {\n  switch (type) {\n    case types.CHANGE_FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { composeWithDevTools } from 'redux-devtools-extension';\nimport { createStore, combineReducers } from 'redux';\nimport contactsReducer from './reducer';\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport { App } from './components/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}