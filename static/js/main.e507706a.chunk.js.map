{"version":3,"sources":["redux/selectors.jsx","redux/actions.jsx","components/СontactForm/СontactForm.styled.jsx","components/СontactForm/СontactForm.jsx","components/СontactElement/ContactElement.styled.jsx","components/СontactElement/СontactElement.jsx","components/СontactList/СontactList.styled.jsx","components/СontactList/СontactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App.styled.jsx","components/App.jsx","redux/reducer.jsx","redux/store.jsx","index.js"],"names":["getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","contact","name","includes","createContact","createAction","number","payload","id","uuidv4","deleteContact","changeFilter","Form","styled","form","Input","input","Button","button","ContactForm","useState","setName","setNumber","dispatch","useDispatch","allContacts","useSelector","handleContact","e","currentTarget","value","newContact","contactToCheck","some","alert","actions","onSubmit","preventDefault","htmlFor","onChange","type","pattern","title","required","Item","li","ContactElement","onClick","List","ul","ContactList","map","Label","label","Filter","contactsActions","target","PhonebookTitle","h1","ContactTitle","h2","App","createReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e507706a.chunk.js","sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n};\n","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst createContact = createAction('createContact', (name, number) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('deleteContact');\n\nconst changeFilter = createAction('changeFilter');\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { createContact, deleteContact, changeFilter };\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  // display: block;\n  margin-left: 20px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  background-color: #34b4eb;\n  border-color: #34b4eb;\n  border-radius: 4px;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/selectors';\nimport actions from '../../redux/actions';\nimport { Form, Input, Button } from './СontactForm.styled';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const allContacts = useSelector(getContacts);\n\n  const handleContact = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmitContact = e => {\n    e.preventDefault();\n    newContact();\n    setName('');\n    setNumber('');\n  };\n\n  const newContact = () => {\n    const contactToCheck = {\n      name,\n      number,\n    };\n    allContacts.some(contact => contact.name === contactToCheck.name)\n      ? alert(`${contactToCheck.name} is already in contacts`)\n      : dispatch(actions.createContact(name, number));\n  };\n\n  return (\n    <Form onSubmit={handleSubmitContact}>\n      <label htmlFor=\"name\">\n        Name\n        <Input\n          value={name}\n          onChange={handleContact}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов.\n             Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label htmlFor=\"number\">\n        Number\n        <Input\n          value={number}\n          onChange={handleContact}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы,\n             тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <div>\n        <Button type=\"submit\">Add contact</Button>\n      </div>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  width: 300px;\n  margin: 4px;\n`;\n\nexport const Button = styled.button`\n  background-color: #34b4eb;\n  border-color: #34b4eb;\n  border-radius: 4px;\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Button } from './ContactElement.styled';\n\nconst ContactElement = ({ id, name, number, onClick }) => {\n  return (\n    <Item key={id}>\n      <span>\n        {name}: {number}\n      </span>\n      <Button type=\"button\" onClick={onClick}>\n        Delete\n      </Button>\n    </Item>\n  );\n};\n\nContactElement.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ContactElement;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding-left: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport ContactElement from 'components/СontactElement/СontactElement';\nimport { useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/actions';\nimport { getVisibleContacts } from '../../redux/selectors';\nimport { List } from './СontactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(actions.deleteContact(id));\n\n  return (\n    <List>\n      {contacts.map(contact => (\n        <ContactElement\n          key={contact.id}\n          name={contact.name}\n          number={contact.number}\n          onClick={() => onDeleteContact(contact.id)}\n        />\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: block;\n  margin-left: 20px;\n`;\n","// import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/selectors';\nimport contactsActions from '../../redux/actions';\nimport { Label } from './Filter.styled';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <Label>\n      <p> Find contact by name</p>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(contactsActions.changeFilter(e.target.value))}\n      />\n    </Label>\n  );\n};\n\n// Filter.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   // onChange: PropTypes.func.isRequired,\n// };\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const PhonebookTitle = styled.h1`\n  margin-left: 20px;\n`;\n\nexport const ContactTitle = styled.h2`\n  margin-left: 20px;\n`;\n","// import { Component } from 'react';\nimport ContactForm from './СontactForm/СontactForm';\nimport ContactList from './СontactList/СontactList';\nimport Filter from './Filter/Filter';\nimport { PhonebookTitle, ContactTitle } from './App.styled';\n\nconst App = () => {\n  return (\n    <div>\n      <PhonebookTitle>Phonebook</PhonebookTitle>\n      <ContactForm />\n      <ContactTitle>Contacts</ContactTitle>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './actions';\n\nconst items = createReducer([], {\n  [actions.createContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n});\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './components/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}